{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dialog-create-new-schedule/dialog-create-new-schedule.component.html","webpack:///./src/app/dialog-create-new-schedule/dialog-create-new-schedule.component.scss","webpack:///./src/app/dialog-create-new-schedule/dialog-create-new-schedule.component.ts","webpack:///./src/app/dialog-edit-time-range/dialog-edit-time-range.component.html","webpack:///./src/app/dialog-edit-time-range/dialog-edit-time-range.component.scss","webpack:///./src/app/dialog-edit-time-range/dialog-edit-time-range.component.ts","webpack:///./src/app/svg-time-chart/svg-time-chart.component.html","webpack:///./src/app/svg-time-chart/svg-time-chart.component.scss","webpack:///./src/app/svg-time-chart/svg-time-chart.component.ts","webpack:///./src/app/svg.service.ts","webpack:///./src/app/time-range.model.ts","webpack:///./src/app/time-range.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"app-root\\\">\\n\\n  <h1 *ngIf=\\\"!currentSchedule || !optimizedSchedule\\\">Almost loaded...</h1>\\n\\n  <div *ngIf=\\\"currentSchedule && optimizedSchedule\\\">\\n\\n    <app-svg-time-chart\\n      *ngIf=\\\"currentSchedule\\\"\\n      [title]=\\\"'Regular Schedule'\\\"\\n      [timeRanges]=\\\"currentSchedule\\\"\\n      [copyFrom]=\\\"optimizedSchedule\\\"\\n      [copyFromTitle]=\\\"'Optimized'\\\"\\n    ></app-svg-time-chart>\\n\\n    <hr>\\n\\n    <app-svg-time-chart\\n      *ngIf=\\\"optimizedSchedule\\\"\\n      [title]=\\\"'Optimized Schedule'\\\"\\n      [timeRanges]=\\\"optimizedSchedule\\\"\\n      [copyFrom]=\\\"currentSchedule\\\"\\n      [copyFromTitle]=\\\"'Regular'\\\"\\n    ></app-svg-time-chart>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \".app-root {\\n  padding: 20px 0;\\n  min-width: 1860px; }\\n\"","import {Component, OnInit} from '@angular/core';\nimport {TimeRangeModel} from './time-range.model';\nimport {TimeRangeService} from './time-range.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  public currentSchedule: TimeRangeModel[];\n  public optimizedSchedule: TimeRangeModel[];\n\n  constructor(\n    private timeRangeService: TimeRangeService) {\n  }\n\n  public ngOnInit() {\n\n    /**\n     * Get Init general Data from JSON\n     */\n    this.timeRangeService.getInitRegularSchedule()\n      .then((timeRanges: TimeRangeModel[]) => {\n        this.currentSchedule = timeRanges;\n      })\n      .catch(() => {\n        this.currentSchedule = [];\n      });\n\n    /**\n     * Get Init optimized Data from JSON\n     */\n    this.timeRangeService.getInitOptimizedSchedule()\n      .then((timeRanges: TimeRangeModel[]) => {\n        this.optimizedSchedule = timeRanges;\n      })\n      .catch(() => {\n        this.optimizedSchedule = [];\n      });\n  }\n\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {HttpModule} from '@angular/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatButtonModule, MatDialogModule, MatFormFieldModule, MatInputModule, MatSelectModule, MatStepperModule} from '@angular/material';\n\nimport {AppComponent} from './app.component';\nimport {SvgTimeChartComponent} from './svg-time-chart/svg-time-chart.component';\nimport {TimeRangeService} from './time-range.service';\nimport {DialogCreateNewScheduleComponent} from './dialog-create-new-schedule/dialog-create-new-schedule.component';\nimport {DialogEditTimeRangeComponent} from './dialog-edit-time-range/dialog-edit-time-range.component';\nimport {SvgService} from './svg.service';\nimport {ServiceWorkerModule} from '@angular/service-worker';\nimport {environment} from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SvgTimeChartComponent,\n    DialogCreateNewScheduleComponent,\n    DialogEditTimeRangeComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatStepperModule,\n    ServiceWorkerModule.register('./ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [\n    TimeRangeService,\n    SvgService\n  ],\n  entryComponents: [\n    DialogCreateNewScheduleComponent,\n    DialogEditTimeRangeComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","module.exports = \"<div class=\\\"app-dialog-create-new-schedule\\\">\\n  <h1 mat-dialog-title>Create new {{data.title}}</h1>\\n  <div mat-dialog-content>\\n\\n    <p>Erase current Schedule and Create New</p>\\n\\n    <mat-horizontal-stepper [linear]=\\\"true\\\" #stepper>\\n\\n      <mat-step [stepControl]=\\\"firstFormGroup\\\">\\n        <form [formGroup]=\\\"firstFormGroup\\\">\\n          <ng-template matStepLabel>Sleep & Work</ng-template>\\n\\n          <div class=\\\"table\\\">\\n\\n            <div class=\\\"cel\\\" style=\\\"width: 40%\\\">\\n              <h4>Sleep from</h4>\\n              <mat-form-field>\\n                <mat-select\\n                  [(value)]=\\\"formData.sleep.start.hour\\\"\\n                  placeholder=\\\"Hour\\\"\\n                  formControlName=\\\"sleepStartHour\\\"\\n                  required>\\n                  <mat-option\\n                    *ngFor=\\\"let hour of hours;\\\"\\n                    [value]=\\\"hour\\\">\\n                    {{hour}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n              <mat-form-field>\\n                <mat-select\\n                  [(value)]=\\\"formData.sleep.start.minutes\\\"\\n                  placeholder=\\\"Minutes\\\"\\n                  formControlName=\\\"sleepStartMinutes\\\"\\n                  required>\\n                  <mat-option [value]=\\\"0\\\">00</mat-option>\\n                  <mat-option [value]=\\\"15\\\">15</mat-option>\\n                  <mat-option [value]=\\\"30\\\">30</mat-option>\\n                  <mat-option [value]=\\\"45\\\">45</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n\\n            <div class=\\\"cel\\\" style=\\\"width: 40%\\\">\\n              <h4>Sleep to</h4>\\n              <mat-form-field>\\n                <mat-select\\n                  [(value)]=\\\"formData.sleep.end.hour\\\"\\n                  placeholder=\\\"Hour\\\"\\n                  formControlName=\\\"sleepEndHour\\\"\\n                  required>\\n                  <mat-option\\n                    *ngFor=\\\"let hour of hours;\\\"\\n                    [value]=\\\"hour\\\">\\n                    {{hour}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n              <mat-form-field>\\n                <mat-select\\n                  [(value)]=\\\"formData.sleep.end.minutes\\\"\\n                  placeholder=\\\"Minutes\\\"\\n                  formControlName=\\\"sleepEndMinutes\\\"\\n                  required>\\n                  <mat-option [value]=\\\"0\\\">00</mat-option>\\n                  <mat-option [value]=\\\"15\\\">15</mat-option>\\n                  <mat-option [value]=\\\"30\\\">30</mat-option>\\n                  <mat-option [value]=\\\"45\\\">45</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n\\n            <div class=\\\"cel\\\" style=\\\"width: 20%\\\">\\n              <h4>Sleep duration</h4>\\n              <div class=\\\"result\\\">\\n                <strong>{{duration(formData.sleep.start.hour, formData.sleep.start.minutes, formData.sleep.end.hour, formData.sleep.end.minutes)}}</strong>\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"table\\\">\\n\\n            <div class=\\\"cel\\\" style=\\\"width: 40%\\\">\\n              <h4>Work from</h4>\\n              <mat-form-field>\\n                <mat-select\\n                  [(value)]=\\\"formData.work.start.hour\\\"\\n                  placeholder=\\\"Hour\\\"\\n                  formControlName=\\\"workStartHour\\\"\\n                  required>\\n                  <mat-option\\n                    *ngFor=\\\"let hour of hours;\\\"\\n                    [value]=\\\"hour\\\">\\n                    {{hour}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n              <mat-form-field>\\n                <mat-select\\n                  [(value)]=\\\"formData.work.start.minutes\\\"\\n                  placeholder=\\\"Minutes\\\"\\n                  formControlName=\\\"workStartMinutes\\\"\\n                  required>\\n                  <mat-option [value]=\\\"0\\\">00</mat-option>\\n                  <mat-option [value]=\\\"15\\\">15</mat-option>\\n                  <mat-option [value]=\\\"30\\\">30</mat-option>\\n                  <mat-option [value]=\\\"45\\\">45</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n\\n            <div class=\\\"cel\\\" style=\\\"width: 40%\\\">\\n              <h4>Work to</h4>\\n              <mat-form-field>\\n                <mat-select\\n                  [(value)]=\\\"formData.work.end.hour\\\"\\n                  placeholder=\\\"Hour\\\"\\n                  formControlName=\\\"workEndHour\\\"\\n                  required>\\n                  <mat-option\\n                    *ngFor=\\\"let hour of hours;\\\"\\n                    [value]=\\\"hour\\\">\\n                    {{hour}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n              <mat-form-field>\\n                <mat-select\\n                  [(value)]=\\\"formData.work.end.minutes\\\"\\n                  placeholder=\\\"Minutes\\\"\\n                  formControlName=\\\"workEndMinutes\\\"\\n                  required>\\n                  <mat-option [value]=\\\"0\\\">00</mat-option>\\n                  <mat-option [value]=\\\"15\\\">15</mat-option>\\n                  <mat-option [value]=\\\"30\\\">30</mat-option>\\n                  <mat-option [value]=\\\"45\\\">45</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n\\n            <div class=\\\"cel\\\" style=\\\"width: 20%\\\">\\n              <h4>Work duration</h4>\\n              <div class=\\\"result\\\">\\n                <strong>{{duration(formData.work.start.hour, formData.work.start.minutes, formData.work.end.hour, formData.work.end.minutes)}}</strong>\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div>\\n            <button mat-raised-button color=\\\"primary\\\" matStepperNext>Next</button>\\n          </div>\\n        </form>\\n      </mat-step>\\n\\n\\n      <mat-step [stepControl]=\\\"secondFormGroup\\\">\\n        <form [formGroup]=\\\"secondFormGroup\\\">\\n          <ng-template matStepLabel>Transport</ng-template>\\n\\n          <div class=\\\"table\\\">\\n\\n            <div class=\\\"cel\\\" style=\\\"width: 40%\\\">\\n              <h4>Way to work start</h4>\\n              <mat-form-field>\\n                <mat-select\\n                  [(value)]=\\\"formData.wayToWork.start.hour\\\"\\n                  placeholder=\\\"Hour\\\"\\n                  formControlName=\\\"wayToWorkStartHour\\\"\\n                  required>\\n                  <mat-option\\n                    *ngFor=\\\"let hour of hours;\\\"\\n                    [value]=\\\"hour\\\">\\n                    {{hour}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n              <mat-form-field>\\n                <mat-select\\n                  [(value)]=\\\"formData.wayToWork.start.minutes\\\"\\n                  placeholder=\\\"Minutes\\\"\\n                  formControlName=\\\"wayToWorkStartMinutes\\\"\\n                  required>\\n                  <mat-option [value]=\\\"0\\\">00</mat-option>\\n                  <mat-option [value]=\\\"15\\\">15</mat-option>\\n                  <mat-option [value]=\\\"30\\\">30</mat-option>\\n                  <mat-option [value]=\\\"45\\\">45</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n\\n            <div class=\\\"cel\\\" style=\\\"width: 40%\\\">\\n              <h4>Way to work end</h4>\\n              <mat-form-field>\\n                <mat-select\\n                  [(value)]=\\\"formData.wayToWork.end.hour\\\"\\n                  placeholder=\\\"Hour\\\"\\n                  formControlName=\\\"wayToWorkEndHour\\\"\\n                  required>\\n                  <mat-option\\n                    *ngFor=\\\"let hour of hours;\\\"\\n                    [value]=\\\"hour\\\">\\n                    {{hour}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n              <mat-form-field>\\n                <mat-select\\n                  [(value)]=\\\"formData.wayToWork.end.minutes\\\"\\n                  placeholder=\\\"Minutes\\\"\\n                  formControlName=\\\"wayToWorkEndMinutes\\\"\\n                  required>\\n                  <mat-option [value]=\\\"0\\\">00</mat-option>\\n                  <mat-option [value]=\\\"15\\\">15</mat-option>\\n                  <mat-option [value]=\\\"30\\\">30</mat-option>\\n                  <mat-option [value]=\\\"45\\\">45</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n\\n            <div class=\\\"cel\\\" style=\\\"width: 20%\\\">\\n              <h4>Duration to work</h4>\\n              <div class=\\\"result\\\">\\n                <strong>{{duration(formData.wayToWork.start.hour, formData.wayToWork.start.minutes, formData.wayToWork.end.hour, formData.wayToWork.end.minutes)}}</strong>\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"table\\\">\\n\\n            <div class=\\\"cel\\\" style=\\\"width: 40%\\\">\\n              <h4>Way to home start</h4>\\n              <mat-form-field>\\n                <mat-select\\n                  [(value)]=\\\"formData.wayToHome.start.hour\\\"\\n                  placeholder=\\\"Hour\\\"\\n                  formControlName=\\\"wayToHomeStartHour\\\"\\n                  required>\\n                  <mat-option\\n                    *ngFor=\\\"let hour of hours;\\\"\\n                    [value]=\\\"hour\\\">\\n                    {{hour}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n              <mat-form-field>\\n                <mat-select\\n                  [(value)]=\\\"formData.wayToHome.start.minutes\\\"\\n                  placeholder=\\\"Minutes\\\"\\n                  formControlName=\\\"wayToHomeStartMinutes\\\"\\n                  required>\\n                  <mat-option [value]=\\\"0\\\">00</mat-option>\\n                  <mat-option [value]=\\\"15\\\">15</mat-option>\\n                  <mat-option [value]=\\\"30\\\">30</mat-option>\\n                  <mat-option [value]=\\\"45\\\">45</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n\\n            <div class=\\\"cel\\\" style=\\\"width: 40%\\\">\\n              <h4>Way to home end</h4>\\n              <mat-form-field>\\n                <mat-select\\n                  [(value)]=\\\"formData.wayToHome.end.hour\\\"\\n                  placeholder=\\\"Hour\\\"\\n                  formControlName=\\\"wayToHomeEndHour\\\"\\n                  required>\\n                  <mat-option\\n                    *ngFor=\\\"let hour of hours;\\\"\\n                    [value]=\\\"hour\\\">\\n                    {{hour}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n              <mat-form-field>\\n                <mat-select\\n                  [(value)]=\\\"formData.wayToHome.end.minutes\\\"\\n                  placeholder=\\\"Minutes\\\"\\n                  formControlName=\\\"wayToHomeEndMinutes\\\"\\n                  required>\\n                  <mat-option [value]=\\\"0\\\">00</mat-option>\\n                  <mat-option [value]=\\\"15\\\">15</mat-option>\\n                  <mat-option [value]=\\\"30\\\">30</mat-option>\\n                  <mat-option [value]=\\\"45\\\">45</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n\\n            <div class=\\\"cel\\\" style=\\\"width: 20%\\\">\\n              <h4>Duration to home</h4>\\n              <div class=\\\"result\\\">\\n                <strong>{{duration(formData.wayToHome.start.hour, formData.wayToHome.start.minutes, formData.wayToHome.end.hour, formData.wayToHome.end.minutes)}}</strong>\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <h5>\\n            <button\\n              (click)=\\\"onToggleChangeHeavyTraffic()\\\"\\n              mat-raised-button>Change Heavy Traffic</button>\\n          </h5>\\n\\n          <div\\n            *ngIf=\\\"isChangeHeavyTraffic\\\"\\n            class=\\\"table\\\">\\n\\n            <div class=\\\"cel\\\" style=\\\"width: 40%\\\">\\n              <h4>Morning heavy traffic start</h4>\\n              <mat-form-field>\\n                <mat-select\\n                  [(value)]=\\\"formData.trafficToWork.start.hour\\\"\\n                  placeholder=\\\"Hour\\\"\\n                  formControlName=\\\"trafficToWorkStartHour\\\"\\n                  required>\\n                  <mat-option\\n                    *ngFor=\\\"let hour of hours;\\\"\\n                    [value]=\\\"hour\\\">\\n                    {{hour}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n              <mat-form-field>\\n                <mat-select\\n                  [(value)]=\\\"formData.trafficToWork.start.minutes\\\"\\n                  placeholder=\\\"Minutes\\\"\\n                  formControlName=\\\"trafficToWorkStartMinutes\\\"\\n                  required>\\n                  <mat-option [value]=\\\"0\\\">00</mat-option>\\n                  <mat-option [value]=\\\"15\\\">15</mat-option>\\n                  <mat-option [value]=\\\"30\\\">30</mat-option>\\n                  <mat-option [value]=\\\"45\\\">45</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n\\n            <div class=\\\"cel\\\" style=\\\"width: 40%\\\">\\n              <h4>Morning heavy traffic end</h4>\\n              <mat-form-field>\\n                <mat-select\\n                  [(value)]=\\\"formData.trafficToWork.end.hour\\\"\\n                  placeholder=\\\"Hour\\\"\\n                  formControlName=\\\"trafficToWorkEndHour\\\"\\n                  required>\\n                  <mat-option\\n                    *ngFor=\\\"let hour of hours;\\\"\\n                    [value]=\\\"hour\\\">\\n                    {{hour}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n              <mat-form-field>\\n                <mat-select\\n                  [(value)]=\\\"formData.trafficToWork.end.minutes\\\"\\n                  placeholder=\\\"Minutes\\\"\\n                  formControlName=\\\"trafficToWorkEndMinutes\\\"\\n                  required>\\n                  <mat-option [value]=\\\"0\\\">00</mat-option>\\n                  <mat-option [value]=\\\"15\\\">15</mat-option>\\n                  <mat-option [value]=\\\"30\\\">30</mat-option>\\n                  <mat-option [value]=\\\"45\\\">45</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n\\n            <div class=\\\"cel\\\" style=\\\"width: 20%\\\">\\n              <h4>Morning heavy traffic duration</h4>\\n              <div class=\\\"result\\\">\\n                <strong>{{duration(formData.trafficToWork.start.hour, formData.trafficToWork.start.minutes, formData.trafficToWork.end.hour, formData.trafficToWork.end.minutes)}}</strong>\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div\\n            *ngIf=\\\"isChangeHeavyTraffic\\\"\\n            class=\\\"table\\\">\\n\\n            <div class=\\\"cel\\\" style=\\\"width: 40%\\\">\\n              <h4>Evening heavy traffic start</h4>\\n              <mat-form-field>\\n                <mat-select\\n                  [(value)]=\\\"formData.trafficToHome.start.hour\\\"\\n                  placeholder=\\\"Hour\\\"\\n                  formControlName=\\\"trafficToHomeStartHour\\\"\\n                  required>\\n                  <mat-option\\n                    *ngFor=\\\"let hour of hours;\\\"\\n                    [value]=\\\"hour\\\">\\n                    {{hour}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n              <mat-form-field>\\n                <mat-select\\n                  [(value)]=\\\"formData.trafficToHome.start.minutes\\\"\\n                  placeholder=\\\"Minutes\\\"\\n                  formControlName=\\\"trafficToHomeStartMinutes\\\"\\n                  required>\\n                  <mat-option [value]=\\\"0\\\">00</mat-option>\\n                  <mat-option [value]=\\\"15\\\">15</mat-option>\\n                  <mat-option [value]=\\\"30\\\">30</mat-option>\\n                  <mat-option [value]=\\\"45\\\">45</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n\\n            <div class=\\\"cel\\\" style=\\\"width: 40%\\\">\\n              <h4>Evening heavy traffic end</h4>\\n              <mat-form-field>\\n                <mat-select\\n                  [(value)]=\\\"formData.trafficToHome.end.hour\\\"\\n                  placeholder=\\\"Hour\\\"\\n                  formControlName=\\\"trafficToHomeEndHour\\\"\\n                  required>\\n                  <mat-option\\n                    *ngFor=\\\"let hour of hours;\\\"\\n                    [value]=\\\"hour\\\">\\n                    {{hour}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n              <mat-form-field>\\n                <mat-select\\n                  [(value)]=\\\"formData.trafficToHome.end.minutes\\\"\\n                  placeholder=\\\"Minutes\\\"\\n                  formControlName=\\\"trafficToHomeEndMinutes\\\"\\n                  required>\\n                  <mat-option [value]=\\\"0\\\">00</mat-option>\\n                  <mat-option [value]=\\\"15\\\">15</mat-option>\\n                  <mat-option [value]=\\\"30\\\">30</mat-option>\\n                  <mat-option [value]=\\\"45\\\">45</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n\\n            <div class=\\\"cel\\\" style=\\\"width: 20%\\\">\\n              <h4>Evening heavy traffic duration</h4>\\n              <div class=\\\"result\\\">\\n                <strong>{{duration(formData.trafficToHome.start.hour, formData.trafficToHome.start.minutes, formData.trafficToHome.end.hour, formData.trafficToHome.end.minutes)}}</strong>\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div>\\n            <button mat-button matStepperPrevious>Back</button>\\n            <button\\n              mat-raised-button\\n              color=\\\"primary\\\"\\n              [mat-dialog-close]=\\\"formData\\\"\\n              cdkFocusInitial>\\n              Apply\\n            </button>\\n          </div>\\n\\n        </form>\\n      </mat-step>\\n\\n    </mat-horizontal-stepper>\\n\\n  </div>\\n  <div mat-dialog-actions>\\n    <button mat-button (click)=\\\"onNoClick()\\\">Cancel</button>\\n    <!--<button mat-button [mat-dialog-close]=\\\"data.animal\\\" cdkFocusInitial>Ok</button>-->\\n  </div>\\n\\n</div>\\n\"","module.exports = \".app-dialog-create-new-schedule .table {\\n  display: flex; }\\n\\n.app-dialog-create-new-schedule .mat-form-field {\\n  width: 100px; }\\n\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\n\nimport {TimeRangeService} from '../time-range.service';\n\n/**\n * Dialog from creating schedule\n */\n\n@Component({\n  selector: 'app-dialog-create-new-schedule',\n  templateUrl: './dialog-create-new-schedule.component.html',\n  styleUrls: ['./dialog-create-new-schedule.component.scss']\n})\nexport class DialogCreateNewScheduleComponent implements OnInit {\n\n  public hours: number[];\n\n  public firstFormGroup: FormGroup;\n  public secondFormGroup: FormGroup;\n\n  public formData = {\n    sleep: {\n      start: {\n        hour: 23,\n        minutes: 0\n      },\n      end: {\n        hour: 8,\n        minutes: 0\n      }\n    },\n    work: {\n      start: {\n        hour: 10,\n        minutes: 0\n      },\n      end: {\n        hour: 19,\n        minutes: 0\n      }\n    },\n\n    wayToWork: {\n      start: {\n        hour: 9,\n        minutes: 0\n      },\n      end: {\n        hour: 10,\n        minutes: 0\n      }\n    },\n    wayToHome: {\n      start: {\n        hour: 19,\n        minutes: 0\n      },\n      end: {\n        hour: 20,\n        minutes: 0\n      }\n    },\n\n    trafficToWork: {\n      start: {\n        hour: 7,\n        minutes: 30\n      },\n      end: {\n        hour: 10,\n        minutes: 30\n      }\n    },\n    trafficToHome: {\n      start: {\n        hour: 17,\n        minutes: 0\n      },\n      end: {\n        hour: 19,\n        minutes: 30\n      }\n    }\n  };\n\n  public isChangeHeavyTraffic = false;\n\n  constructor(\n    private timeRangeService: TimeRangeService,\n    public dialogRef: MatDialogRef<DialogCreateNewScheduleComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private _formBuilder: FormBuilder) {\n  }\n\n  public ngOnInit() {\n    this.hours = this.timeRangeService.hours();\n\n    this.firstFormGroup = this._formBuilder.group({\n      sleepStartHour: [this.formData.sleep.start.hour, Validators.required],\n      sleepStartMinutes: [this.formData.sleep.start.minutes, Validators.required],\n      sleepEndHour: [this.formData.sleep.end.hour, Validators.required],\n      sleepEndMinutes: [this.formData.sleep.end.minutes, Validators.required],\n\n      workStartHour: [this.formData.work.start.hour, Validators.required],\n      workStartMinutes: [this.formData.work.start.minutes, Validators.required],\n      workEndHour: [this.formData.work.end.hour, Validators.required],\n      workEndMinutes: [this.formData.work.end.minutes, Validators.required],\n    });\n\n    this.secondFormGroup = this._formBuilder.group({\n      wayToWorkStartHour: [this.formData.wayToWork.start.hour, Validators.required],\n      wayToWorkStartMinutes: [this.formData.wayToWork.start.minutes, Validators.required],\n      wayToWorkEndHour: [this.formData.wayToWork.end.hour, Validators.required],\n      wayToWorkEndMinutes: [this.formData.wayToWork.end.minutes, Validators.required],\n\n      wayToHomeStartHour: [this.formData.wayToHome.start.hour, Validators.required],\n      wayToHomeStartMinutes: [this.formData.wayToHome.start.minutes, Validators.required],\n      wayToHomeEndHour: [this.formData.wayToHome.end.hour, Validators.required],\n      wayToHomeEndMinutes: [this.formData.wayToHome.end.minutes, Validators.required],\n\n      trafficToWorkStartHour: [this.formData.trafficToWork.start.hour, Validators.required],\n      trafficToWorkStartMinutes: [this.formData.trafficToWork.start.minutes, Validators.required],\n      trafficToWorkEndHour: [this.formData.trafficToWork.end.hour, Validators.required],\n      trafficToWorkEndMinutes: [this.formData.trafficToWork.end.minutes, Validators.required],\n\n      trafficToHomeStartHour: [this.formData.trafficToHome.start.hour, Validators.required],\n      trafficToHomeStartMinutes: [this.formData.trafficToHome.start.minutes, Validators.required],\n      trafficToHomeEndHour: [this.formData.trafficToHome.end.hour, Validators.required],\n      trafficToHomeEndMinutes: [this.formData.trafficToHome.end.minutes, Validators.required]\n    });\n  }\n\n  public onNoClick() {\n    this.dialogRef.close();\n  }\n\n  public onToggleChangeHeavyTraffic() {\n    this.isChangeHeavyTraffic = !this.isChangeHeavyTraffic;\n  }\n\n  public duration(startH, startM, endH, endM): string {\n    return this.timeRangeService.duration(startH, startM, endH, endM);\n  }\n\n}\n","module.exports = \"<div class=\\\"app-dialog-edit-time-range\\\">\\n  <h1 mat-dialog-title>Edit Time Range{{data.timeRange.title}}</h1>\\n  <div mat-dialog-content>\\n\\n    <form [formGroup]=\\\"firstFormGroup\\\">\\n\\n      <mat-form-field class=\\\"range-title\\\">\\n        <input\\n          matInput\\n          placeholder=\\\"Title\\\"\\n          [(value)]=\\\"formData.title\\\"\\n          formControlName=\\\"title\\\">\\n      </mat-form-field>\\n\\n      <div class=\\\"table\\\">\\n\\n        <div class=\\\"cel\\\" style=\\\"width: 40%\\\">\\n          <h4>Time from</h4>\\n          <mat-form-field>\\n            <mat-select\\n              [(value)]=\\\"formData.start.hour\\\"\\n              placeholder=\\\"Hour\\\"\\n              formControlName=\\\"startHour\\\"\\n              required>\\n              <mat-option\\n                *ngFor=\\\"let hour of hours;\\\"\\n                [value]=\\\"hour\\\">\\n                {{hour}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n          <mat-form-field>\\n            <mat-select\\n              [(value)]=\\\"formData.start.minutes\\\"\\n              placeholder=\\\"Minutes\\\"\\n              formControlName=\\\"startMinutes\\\"\\n              required>\\n              <mat-option [value]=\\\"0\\\">00</mat-option>\\n              <mat-option [value]=\\\"15\\\">15</mat-option>\\n              <mat-option [value]=\\\"30\\\">30</mat-option>\\n              <mat-option [value]=\\\"45\\\">45</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n\\n        <div class=\\\"cel\\\" style=\\\"width: 40%\\\">\\n          <h4>Time to</h4>\\n          <mat-form-field>\\n            <mat-select\\n              [(value)]=\\\"formData.end.hour\\\"\\n              placeholder=\\\"Hour\\\"\\n              formControlName=\\\"endHour\\\"\\n              required>\\n              <mat-option\\n                *ngFor=\\\"let hour of hours;\\\"\\n                [value]=\\\"hour\\\">\\n                {{hour}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n          <mat-form-field>\\n            <mat-select\\n              [(value)]=\\\"formData.end.minutes\\\"\\n              placeholder=\\\"Minutes\\\"\\n              formControlName=\\\"endMinutes\\\"\\n              required>\\n              <mat-option [value]=\\\"0\\\">00</mat-option>\\n              <mat-option [value]=\\\"15\\\">15</mat-option>\\n              <mat-option [value]=\\\"30\\\">30</mat-option>\\n              <mat-option [value]=\\\"45\\\">45</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n\\n        <div class=\\\"cel\\\" style=\\\"width: 20%\\\">\\n          <h4>Duration</h4>\\n          <div class=\\\"result\\\">\\n            <strong>{{duration()}}</strong>\\n          </div>\\n        </div>\\n\\n      </div>\\n\\n      <mat-form-field class=\\\"range-kind\\\">\\n        <mat-select\\n          [(value)]=\\\"formData.kind\\\"\\n          placeholder=\\\"Kind\\\"\\n          formControlName=\\\"kind\\\"\\n          required>\\n          <mat-option value=\\\"blue\\\">Blue Color Range</mat-option>\\n          <mat-option value=\\\"green\\\">Green Color Range</mat-option>\\n          <mat-option value=\\\"yellow\\\">Yellow Color Range</mat-option>\\n          <mat-option value=\\\"red\\\">Red Color Range</mat-option>\\n\\n          <!--<mat-option value=\\\"title\\\" disabled=\\\"disabled\\\">Title Range (Transport, Activities)</mat-option>-->\\n          <!--<mat-option value=\\\"background\\\" disabled=\\\"disabled\\\">Background Range (Heavy traffic)</mat-option>-->\\n\\n          <mat-option value=\\\"work\\\" disabled=\\\"disabled\\\">Specific Range for Work</mat-option>\\n          <mat-option value=\\\"sleep\\\" disabled=\\\"disabled\\\">Specific Range for Sleep</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"range-height\\\">\\n        <mat-select\\n          [(value)]=\\\"formData.height\\\"\\n          placeholder=\\\"Height\\\"\\n          formControlName=\\\"height\\\"\\n          required>\\n          <mat-option [value]=\\\"0\\\">Low</mat-option>\\n          <mat-option [value]=\\\"1\\\">High</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n    </form>\\n\\n  </div>\\n  <div mat-dialog-actions>\\n    <button mat-button (click)=\\\"onNoClick()\\\">Cancel</button>\\n    <button\\n      mat-raised-button\\n      color=\\\"primary\\\"\\n      [mat-dialog-close]=\\\"firstFormGroup\\\"\\n      cdkFocusInitial>\\n      OK\\n    </button>\\n\\n    <div style=\\\"flex-grow: 1;\\\"></div>\\n\\n    <button\\n      *ngIf=\\\"!data.isNew\\\"\\n      mat-raised-button\\n      color=\\\"warn\\\"\\n      [mat-dialog-close]=\\\"{delete: true}\\\"\\n      cdkFocusInitial>\\n      Delete\\n    </button>\\n  </div>\\n\\n</div>\\n\"","module.exports = \".app-dialog-edit-time-range .table {\\n  display: flex; }\\n  .app-dialog-edit-time-range .table .cel .mat-form-field {\\n    width: 100px; }\\n  .app-dialog-edit-time-range .range-title, .app-dialog-edit-time-range .range-kind {\\n  width: 100%; }\\n  .app-dialog-edit-time-range .delete-button {\\n  float: right; }\\n\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {DialogCreateNewScheduleComponent} from '../dialog-create-new-schedule/dialog-create-new-schedule.component';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\n\nimport {TIME_RANGE_KIND} from '../time-range.model';\nimport {TimeRangeService} from '../time-range.service';\n\n/**\n * Dialog for edit/create custom range\n */\n\n@Component({\n  selector: 'app-dialog-edit-time-range',\n  templateUrl: './dialog-edit-time-range.component.html',\n  styleUrls: ['./dialog-edit-time-range.component.scss']\n})\nexport class DialogEditTimeRangeComponent implements OnInit {\n\n  public hours: number[];\n\n  public firstFormGroup: FormGroup;\n\n  public formData = {\n    title: 'New Time Range',\n    start: {\n      hour: 12,\n      minutes: 30\n    },\n    end: {\n      hour: 13,\n      minutes: 15\n    },\n    kind: TIME_RANGE_KIND.blue,\n    height: 0\n  };\n\n  constructor(\n    private timeRangeService: TimeRangeService,\n    public dialogRef: MatDialogRef<DialogCreateNewScheduleComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private _formBuilder: FormBuilder) {\n  }\n\n  ngOnInit() {\n    this.hours = this.timeRangeService.hours();\n\n    this.formData.title = this.data.timeRange.title;\n\n    this.formData.start.hour = this.data.timeRange.hourStart;\n    this.formData.start.minutes = this.data.timeRange.minutesStart;\n    this.formData.end.hour = this.data.timeRange.hourEnd;\n    this.formData.end.minutes = this.data.timeRange.minutesEnd;\n\n    this.formData.kind = this.data.timeRange.kind;\n    this.formData.height = this.data.timeRange.height;\n\n    this.firstFormGroup = this._formBuilder.group({\n      title: [this.formData.title],\n\n      startHour: [this.formData.start.hour, Validators.required],\n      startMinutes: [this.formData.start.minutes, Validators.required],\n      endHour: [this.formData.end.hour, Validators.required],\n      endMinutes: [this.formData.end.minutes, Validators.required],\n\n      kind: [this.formData.kind, Validators.required],\n      height: [this.formData.height, Validators.required],\n    });\n  }\n\n  /**\n   * Cnacel event\n   */\n  public onNoClick() {\n    this.dialogRef.close();\n  }\n\n  /**\n   * Get duration string between times\n   * @return {string}\n   */\n  public duration(): string {\n    return this.timeRangeService.duration(\n      this.formData.start.hour, this.formData.start.minutes,\n      this.formData.end.hour, this.formData.end.minutes);\n  }\n\n}\n","module.exports = \"<div class=\\\"app-svg-time-chart\\\">\\n  <div class=\\\"actions\\\">\\n    <button (click)=\\\"onAddRange()\\\" mat-button color=\\\"primary\\\">\\n      <i class=\\\"material-icons\\\">add_circle_outline</i>\\n      Add Range\\n    </button>\\n    |\\n    <button (click)=\\\"onDownloadImage()\\\" mat-button>\\n      <i class=\\\"material-icons\\\">image</i>\\n      Download Image\\n    </button>\\n    |\\n    <button (click)=\\\"onDownloadData()\\\" mat-button>\\n      <i class=\\\"material-icons\\\">save</i>\\n      Download Data\\n    </button>\\n\\n    <button (click)=\\\"onUploadData()\\\" mat-button>\\n      <i class=\\\"material-icons\\\">input</i>\\n      Import Data\\n    </button>\\n    <input\\n      type=\\\"file\\\"\\n      #uploadFile\\n      [hidden]=\\\"true\\\"\\n      accept=\\\".json\\\"\\n      (change)=\\\"onUploadFile($event)\\\"/>\\n\\n    |\\n    <button (click)=\\\"onCopyFrom()\\\" mat-button color=\\\"primary\\\">\\n      <i class=\\\"material-icons\\\">file_copy</i>\\n      Copy from {{copyFromTitle}}\\n    </button>\\n    <button (click)=\\\"onCreateNew()\\\" mat-button color=\\\"primary\\\">\\n      <i class=\\\"material-icons\\\">create</i>\\n      Create new\\n    </button>\\n    <button (click)=\\\"onClear()\\\" mat-button color=\\\"warn\\\">\\n      <i class=\\\"material-icons\\\">clear</i>\\n      Clear\\n    </button>\\n  </div>\\n\\n  <svg\\n  xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n  xml:space=\\\"preserve\\\"\\n  #svg\\n  style=\\\"margin: 0 auto; padding: 20px 0; width: 2146px; height: 480px;\\\"\\n  class=\\\"svg-time-chart\\\">\\n\\n  <defs>\\n        <filter\\n          [id]=\\\"'dashedBackground'+id\\\"\\n          x=\\\"0\\\"\\n          y=\\\"0\\\"\\n          width=\\\"100%\\\"\\n          height=\\\"100%\\\">\\n            <feImage\\n              xlink:href=\\\"http://app.absence.io/assets/images/absence_pattern.png\\\"\\n              x=\\\"0\\\"\\n              y=\\\"0\\\"\\n              width=\\\"6\\\"\\n              height=\\\"48\\\"\\n              preserveAspectRatio=\\\"xMinYMin slice\\\"/>\\n            <feTile\\n              x=\\\"0\\\"\\n              y=\\\"0\\\"\\n              width=\\\"100%\\\"\\n              height=\\\"100%\\\"/>\\n            <feComposite\\n              in2=\\\"SourceAlpha\\\"\\n              operator=\\\"in\\\"/>\\n            <feMerge>\\n                <feMergeNode in=\\\"SourceGraphic\\\"/>\\n                <feMergeNode/>\\n            </feMerge>\\n        </filter>\\n  </defs>\\n\\n  <rect\\n    class=\\\"background\\\"\\n    x=\\\"0\\\"\\n    y=\\\"0\\\"\\n    [attr.width]=\\\"svgWidthFull\\\"\\n    [attr.height]=\\\"svgHeightFull\\\"\\n    style=\\\"fill: white;\\\" />\\n\\n  <g class=\\\"ranges\\\">\\n\\n    <g class=\\\"ranges\\\">\\n\\n      <g\\n        *ngFor=\\\"let timeRange of timeRangesBackgrounds; index as i;\\\"\\n        class=\\\"background-group\\\">\\n          <rect\\n            class=\\\"background\\\"\\n            [attr.x]=\\\"rangeX(timeRange)\\\"\\n            [attr.y]=\\\"svgMargin\\\"\\n            [attr.width]=\\\"rangeWidth(timeRange)\\\"\\n            [attr.height]=\\\"svgHeight\\\"\\n            fill=\\\"#eee\\\"\\n            [attr.filter]=\\\"'url(#dashedBackground' + id +')'\\\"\\n          />\\n        <g>\\n          <text\\n            class=\\\"background-title\\\"\\n            [attr.x]=\\\"rangeTitleX(timeRange) - 4\\\"\\n            [attr.y]=\\\"svgMargin + 20\\\"\\n            text-anchor=\\\"middle\\\"\\n            fill=\\\"#666\\\"\\n            style=\\\"font-family: Arial, sans-serif; font-size: 8pt; font-weight: bold;\\\">\\n            {{timeRange.title}}\\n          </text>\\n        </g>\\n\\n      </g>\\n\\n      <g\\n        *ngFor=\\\"let timeRange of timeRangesColours; index as i;\\\"\\n        (click)=\\\"onRangeSelect(timeRange)\\\"\\n        class=\\\"color-group\\\">\\n          <rect\\n            class=\\\"color\\\"\\n            [attr.x]=\\\"rangeX(timeRange)\\\"\\n            [attr.y]=\\\"250 - rangeHeight(timeRange)\\\"\\n            [attr.width]=\\\"rangeWidth(timeRange)\\\"\\n            [attr.height]=\\\"rangeHeight(timeRange)\\\"\\n            [attr.fill]=\\\"rangeColor(timeRange)\\\"/>\\n          <text\\n            class=\\\"color-title\\\"\\n            [attr.x]=\\\"rangeTitleX(timeRange)\\\"\\n            [attr.y]=\\\"rangeTitleY(timeRange)\\\"\\n            text-anchor=\\\"end\\\"\\n            [attr.transform]=\\\"'rotate(-90 ' + rangeTitleX(timeRange) + ',' + rangeTitleY(timeRange) + ')'\\\"\\n            [attr.fill]=\\\"rangeColor(timeRange, 1)\\\"\\n            style=\\\"font-family: Arial, sans-serif; font-size: 9pt; font-weight: bold;\\\">\\n            {{timeRange.title}}\\n            <tspan\\n              *ngIf=\\\"duration(timeRange)\\\"\\n              style=\\\"font-weight: normal; font-size: 8pt;\\\" fill=\\\"#eee\\\">(</tspan>\\n            <tspan\\n              *ngIf=\\\"duration(timeRange)\\\"\\n              style=\\\"font-weight: normal; font-size: 8pt;\\\" fill=\\\"#999\\\">{{duration(timeRange)}}</tspan>\\n            <tspan\\n              *ngIf=\\\"duration(timeRange)\\\"\\n              style=\\\"font-weight: normal; font-size: 8pt;\\\" fill=\\\"#eee\\\">)</tspan>\\n          </text>\\n      </g>\\n\\n      <g\\n        *ngFor=\\\"let timeRange of timeRangesTitles; index as i;\\\"\\n        class=\\\"title-group\\\">\\n          <rect\\n            class=\\\"title\\\"\\n            [attr.x]=\\\"rangeX(timeRange)\\\"\\n            [attr.y]=\\\"250\\\"\\n            [attr.width]=\\\"rangeWidth(timeRange)\\\"\\n            [attr.height]=\\\"30\\\"\\n            [attr.fill]=\\\"rangeColor(timeRange)\\\"/>\\n          <text\\n            class=\\\"title-text\\\"\\n            [attr.x]=\\\"rangeTitleX(timeRange) - 4\\\"\\n            [attr.y]=\\\"270\\\"\\n            text-anchor=\\\"middle\\\"\\n            [attr.fill]=\\\"'#000'\\\"\\n            style=\\\"font-family: Arial, sans-serif; font-size: 9pt; font-weight: bold;\\\">\\n            {{timeRange.title}}\\n          </text>\\n          <line\\n            class=\\\"title-left-line\\\"\\n            [attr.x1]=\\\"rangeX(timeRange)\\\"\\n            [attr.x2]=\\\"rangeX(timeRange)\\\"\\n            y1=\\\"250\\\"\\n            y2=\\\"295\\\"\\n            stroke=\\\"rgba(0, 0,0, 1)\\\"\\n            stroke-width=\\\"2px\\\"/>\\n          <line\\n            class=\\\"title-right-line\\\"\\n            [attr.x1]=\\\"rangeX(timeRange) + rangeWidth(timeRange)\\\"\\n            [attr.x2]=\\\"rangeX(timeRange) + rangeWidth(timeRange)\\\"\\n            y1=\\\"250\\\"\\n            y2=\\\"295\\\"\\n            stroke=\\\"rgba(0, 0,0, 1)\\\"\\n            stroke-width=\\\"2px\\\"/>\\n      </g>\\n\\n    </g>\\n\\n  </g>\\n\\n  <g class=\\\"axises\\\">\\n\\n    <g\\n      *ngFor=\\\"let hour of hours; index as i;\\\"\\n      class=\\\"hour\\\">\\n\\n      <text\\n        [attr.x]=\\\"svgMargin + hour * svgHourWidth\\\"\\n        y=\\\"170\\\"\\n        text-anchor=\\\"middle\\\"\\n        style=\\\"font-family: Arial, sans-serif; color: #000; font-size: 9pt;\\\">\\n        {{hour}}:00\\n      </text>\\n      <line\\n        [attr.x1]=\\\"svgMargin + hour * svgHourWidth\\\"\\n        [attr.x2]=\\\"svgMargin + hour * svgHourWidth\\\"\\n        y1=\\\"180\\\"\\n        y2=\\\"250\\\"\\n        stroke=\\\"rgba(0, 0,0, 1)\\\"\\n        stroke-width=\\\"2px\\\"/>\\n      <line\\n        [attr.x1]=\\\"svgMargin + hour * svgHourWidth + svgHalfWidth\\\"\\n        [attr.x2]=\\\"svgMargin + hour * svgHourWidth + svgHalfWidth\\\"\\n        y1=\\\"180\\\"\\n        y2=\\\"250\\\"\\n        stroke=\\\"rgba(0, 0,0, 1)\\\"/>\\n      <line\\n        [attr.x1]=\\\"svgMargin + hour * svgHourWidth + svgQuarterWidth\\\"\\n        [attr.x2]=\\\"svgMargin + hour * svgHourWidth + svgQuarterWidth\\\"\\n        y1=\\\"200\\\"\\n        y2=\\\"250\\\"\\n        stroke=\\\"rgba(0, 0,0, 1)\\\"/>\\n      <line\\n        [attr.x1]=\\\"svgMargin + hour * svgHourWidth + svgHalfWidth + svgQuarterWidth\\\"\\n        [attr.x2]=\\\"svgMargin + hour * svgHourWidth + svgHalfWidth + svgQuarterWidth\\\"\\n        y1=\\\"200\\\"\\n        y2=\\\"250\\\"\\n        stroke=\\\"rgba(0, 0,0, 1)\\\"/>\\n\\n    </g>\\n\\n    <g class=\\\"hour\\\">\\n      <text\\n        [attr.x]=\\\"svgMargin + 24 * svgHourWidth\\\"\\n        y=\\\"170\\\"\\n        text-anchor=\\\"middle\\\"\\n        style=\\\"font-family: Arial, sans-serif; color: #000; font-size: 9pt;\\\">\\n        24:00\\n      </text>\\n      <line\\n        [attr.x1]=\\\"svgMargin + 24 * svgHourWidth\\\"\\n        [attr.x2]=\\\"svgMargin + 24 * svgHourWidth\\\"\\n        y1=\\\"180\\\"\\n        y2=\\\"250\\\"\\n        stroke=\\\"rgba(0, 0,0, 1)\\\"\\n        stroke-width=\\\"2px\\\"/>\\n    </g>\\n\\n  </g>\\n\\n  <g class=\\\"title\\\">\\n    <text\\n        x=\\\"40\\\"\\n        y=\\\"60\\\"\\n        text-anchor=\\\"start\\\"\\n        style=\\\"font-family: Arial, sans-serif; color: #000; font-size: 20pt;\\\">\\n      {{title}}\\n    </text>\\n  </g>\\n\\n  Sorry, your browser does not support inline SVG.\\n</svg>\\n\\n  <div [hidden]=\\\"true\\\">\\n    <canvas [width]=\\\"svgWidthFull\\\" [height]=\\\"svgHeightFull\\\" #canvas></canvas>\\n    <img [width]=\\\"svgWidthFull\\\" [height]=\\\"svgHeightFull\\\" alt=\\\"\\\" #png/>\\n  </div>\\n\\n</div>\\n\"","module.exports = \".app-svg-time-chart {\\n  font-family: Arial, sans-serif;\\n  font-size: 10pt;\\n  color: #000; }\\n  .app-svg-time-chart .actions {\\n    margin-left: 30px; }\\n  .app-svg-time-chart .actions button {\\n      margin-right: 10px;\\n      margin-left: 10px; }\\n  .app-svg-time-chart .new-range {\\n    margin: 10px 40px; }\\n  .app-svg-time-chart .new-range button {\\n      margin-left: 10px; }\\n  .app-svg-time-chart .svg-time-chart .color-group .color, .app-svg-time-chart .svg-time-chart .color-group .color-title {\\n    cursor: pointer; }\\n  .app-svg-time-chart .svg-time-chart .color-group:hover .color, .app-svg-time-chart .svg-time-chart .color-group:hover .color-title {\\n    opacity: 0.5; }\\n\"","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\nimport {MatDialog} from '@angular/material';\n\nimport {TimeRangeModel} from '../time-range.model';\nimport {TimeRangeService} from '../time-range.service';\nimport {SvgService} from '../svg.service';\nimport {DialogCreateNewScheduleComponent} from '../dialog-create-new-schedule/dialog-create-new-schedule.component';\nimport {DialogEditTimeRangeComponent} from '../dialog-edit-time-range/dialog-edit-time-range.component';\n\n/**\n * Main SVG component for Schedule\n */\n\n@Component({\n  selector: 'app-svg-time-chart',\n  templateUrl: './svg-time-chart.component.html',\n  styleUrls: ['./svg-time-chart.component.scss']\n})\nexport class SvgTimeChartComponent implements OnInit {\n\n  @Input() title: string;\n  @Input() timeRanges: TimeRangeModel[];\n\n  @Input() copyFrom: TimeRangeModel[];\n  @Input() copyFromTitle: string;\n\n  @ViewChild('svg') svg; // Main element\n\n  @ViewChild('canvas') canvas; // hidden. for download\n  @ViewChild('png') png; // hidden. for download\n\n  @ViewChild('uploadFile') uploadFile; // hidden. for upload\n\n  public svgMargin: number;\n\n  public svgWidthFull: number;\n\n  public svgHourWidth: number;\n  public svgHalfWidth: number;\n  public svgQuarterWidth: number;\n\n  public svgHeight: number;\n  public svgHeightFull: number;\n\n  public hours: number[]; // for axises\n\n  public timeRangesColours: TimeRangeModel[];\n  public timeRangesTitles: TimeRangeModel[];\n  public timeRangesBackgrounds: TimeRangeModel[];\n\n  public id: string; // for unique id\n\n  constructor(\n    private timeRangeService: TimeRangeService,\n    private svgService: SvgService,\n    private dialog: MatDialog) {\n  }\n\n  public ngOnInit() {\n    this.id = '' + Math.random();\n\n    this.svgMargin = this.svgService.svgMargin;\n    this.svgWidthFull = this.svgService.svgWidthFull;\n    this.svgHourWidth = this.svgService.svgHourWidth;\n    this.svgHalfWidth = this.svgService.svgHalfWidth;\n    this.svgQuarterWidth = this.svgService.svgQuarterWidth;\n    this.svgHeight = this.svgService.svgHeight;\n    this.svgHeightFull = this.svgService.svgHeightFull;\n    this.hours = this.timeRangeService.hours();\n\n    this._initData();\n\n    // For downloading\n    this.png.nativeElement.onload = () =>\n      this.svgService.downloadImageFinal(this.canvas, this.png, this.title);\n\n  }\n\n  /**\n   * Dialog for create new Schedule\n   */\n  public onCreateNew() {\n    const dialogRef = this.dialog.open(DialogCreateNewScheduleComponent, {\n      width: '800px',\n      data: {\n        title: this.title\n      }\n    });\n\n    dialogRef.afterClosed()\n      .subscribe((result) => {\n        if (!result) {\n          return;\n        }\n        this.timeRanges.length = 0;\n        this.timeRanges = this.timeRangeService.createSchedule(result);\n        this._initData();\n      });\n  }\n\n  /**\n   * Events handlers\n   */\n\n  /**\n   * Dialog new range\n   */\n  public onAddRange() {\n    this.onRangeSelect(new TimeRangeModel(), true);\n  }\n\n  /**\n   * Download Image\n   */\n  public onDownloadImage() {\n    this.svgService.downloadImageStart(this.svg, this.png);\n  }\n\n  /**\n   * Download Data\n   */\n  public onDownloadData() {\n    this.timeRangeService.downloadData(this.timeRanges, this.title);\n  }\n\n  /**\n   * Upload Data\n   */\n  public onUploadData() {\n    this.uploadFile.nativeElement.click();\n  }\n\n  /**\n   * Upload Data\n   * @param event\n   * @return {boolean}\n   */\n  public onUploadFile(event) {\n    const files = event.srcElement.files;\n    if (files.length <= 0) {\n      return false;\n    }\n\n    this.timeRangeService.uploadFile(files.item(0))\n      .then((result: TimeRangeModel[]) => {\n        this.uploadFile.nativeElement.value = '';\n        this.timeRanges = result;\n        this._initData();\n      });\n  }\n\n  /**\n   * Clear schedule\n   */\n  public onClear() {\n    this.timeRanges.length = 0;\n    this._initData();\n  }\n\n  /**\n   * Dialog edit range\n   * @param {TimeRangeModel} timeRange\n   * @param {boolean} isNew\n   */\n  public onRangeSelect(timeRange: TimeRangeModel, isNew = false) {\n    const dialogRef = this.dialog.open(DialogEditTimeRangeComponent, {\n      width: '600px',\n      data: {\n        timeRange,\n        isNew\n      }\n    });\n\n    dialogRef.afterClosed()\n      .subscribe((result: FormGroup) => {\n        if (!result || result.invalid) {\n          return;\n        }\n\n        if (result['delete']) {\n          this.timeRangeService.deleteRange(this.timeRanges, timeRange);\n          this._initData();\n          return;\n        }\n\n        this.timeRangeService.editTimeRange(timeRange, result);\n\n        if (isNew) {\n          this.timeRangeService.addRange(this.timeRanges, timeRange);\n          this._initData();\n        }\n      });\n  }\n\n  /**\n   * Get data from the copy\n   */\n  public onCopyFrom() {\n    this.timeRanges = this.timeRangeService.copyRange(this.copyFrom);\n    this._initData();\n  }\n\n  /**\n   * Update lists from timeRanges\n   * @private\n   */\n  private _initData() {\n    setTimeout(() => {\n      this.timeRangesColours = this.timeRangeService.generalRangesFiler(this.timeRanges);\n      this.timeRangesTitles = this.timeRangeService.titleRangesFiler(this.timeRanges);\n      this.timeRangesBackgrounds = this.timeRangeService.backgroundRangesFiler(this.timeRanges);\n    });\n  }\n\n  /**\n   * Helpers for data in SVG (serializers)\n   */\n\n  public rangeHeight(timeRange: TimeRangeModel): number {\n    return this.svgService.rangeHeight(timeRange);\n  }\n\n  public rangeX(timeRange: TimeRangeModel): number {\n    return this.svgService.rangeX(timeRange);\n  }\n\n  public rangeWidth(timeRange: TimeRangeModel): number {\n    return this.svgService.rangeWidth(timeRange);\n  }\n\n  public rangeColor(timeRange: TimeRangeModel, opacity: number = 0.8): string {\n    return this.svgService.rangeColor(timeRange, opacity);\n  }\n\n  public rangeTitleX(timeRange: TimeRangeModel): number {\n    return this.svgService.rangeTitleX(timeRange);\n  }\n\n  public rangeTitleY(timeRange: TimeRangeModel): number {\n    return this.svgService.rangeTitleY(timeRange);\n  }\n\n  public duration(range: TimeRangeModel) {\n    return this.timeRangeService.durationRange(range);\n  }\n\n}\n","import {ElementRef, Injectable} from '@angular/core';\nimport {TIME_RANGE_KIND, TimeRangeModel} from './time-range.model';\n\n/**\n * Service for SVG and UI of charts\n */\n\n@Injectable()\nexport class SvgService {\n\n  public svgMargin = 40;\n\n  public svgWidth = 1728;\n  public svgWidthFull: number; // size + margin\n\n  public svgHourWidth: number; // 1\n  public svgHalfWidth: number; // 1/2\n  public svgQuarterWidth: number; // 1/4\n\n  public svgHeight = 400;\n  public svgHeightFull: number; // size + margin\n\n  public rangeHeightNormal = 30; // height normal of range zone\n  public rangeHeightHigh = 40; // height high of range zone\n\n  constructor() {\n    this.initSizes();\n  }\n\n  /**\n   * Generate sizes\n   * @param {number} svgWidth\n   */\n  public initSizes(svgWidth?: number) {\n    if (svgWidth) {\n      this.svgWidth = svgWidth;\n    }\n\n    this.svgWidthFull = this.svgWidth + this.svgMargin * 2;\n\n    this.svgHourWidth = Math.round(this.svgWidth / 24);\n    this.svgHalfWidth = Math.round(this.svgHourWidth / 2);\n    this.svgQuarterWidth = Math.round(this.svgHourWidth / 4);\n\n    this.svgHeightFull = this.svgHeight + this.svgMargin * 2;\n  }\n\n  /**\n   * Handle click event\n   * @param {ElementRef} svg\n   * @param {ElementRef} png\n   */\n  downloadImageStart(svg: ElementRef, png: ElementRef) {\n    let data = new XMLSerializer().serializeToString(svg.nativeElement);\n    data = encodeURIComponent(data);\n    png.nativeElement.src = 'data:image/svg+xml,' + data;\n  }\n\n  /**\n   * Handle callback from loading image\n   * @param {ElementRef} canvas\n   * @param {ElementRef} png\n   * @param {string} title\n   */\n  downloadImageFinal(canvas: ElementRef, png: ElementRef, title: string) {\n    // add img\n    canvas.nativeElement\n      .getContext('2d')\n      .drawImage(png.nativeElement,\n        0, 0, this.svgWidthFull, this.svgHeightFull,\n        0, 0, this.svgWidthFull, this.svgHeightFull);\n\n    // download\n    const link = document.createElement('a');\n    link.download = `${title}.png`;\n    link.href = canvas.nativeElement.toDataURL();\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  /**\n   * Get height of range\n   * @param {TimeRangeModel} timeRange\n   * @return {number}\n   */\n  public rangeHeight(timeRange: TimeRangeModel): number {\n    return timeRange.height ? this.rangeHeightHigh : this.rangeHeightNormal;\n  }\n\n  /**\n   * Check range position\n   * @param {TimeRangeModel} timeRange\n   * @return {number}\n   */\n  public rangeX(timeRange: TimeRangeModel): number {\n    let x = this.svgMargin + timeRange.hourStart * this.svgHourWidth;\n    switch (timeRange.minutesStart) {\n      case 45:\n        x += this.svgQuarterWidth * 3;\n        break;\n      case 30:\n        x += this.svgQuarterWidth * 2;\n        break;\n      case 15:\n        x += this.svgQuarterWidth;\n        break;\n    }\n    return x;\n  }\n\n  /**\n   * Get range width\n   * @param {TimeRangeModel} timeRange\n   * @return {number}\n   */\n  public rangeWidth(timeRange: TimeRangeModel): number {\n    let hourStart = timeRange.hourStart;\n    const hourEnd = timeRange.hourEnd;\n    if (hourStart > hourEnd) {\n      hourStart = 24 - hourStart;\n    }\n    const quarters = (hourEnd * 4 + timeRange.minutesEnd / 15) - (hourStart * 4 + timeRange.minutesStart / 15);\n    return Math.abs(quarters * this.svgQuarterWidth);\n  }\n\n  /**\n   * Get color of range\n   * @param {TimeRangeModel} timeRange\n   * @param {number} opacity\n   * @return {string}\n   */\n  public rangeColor(timeRange: TimeRangeModel, opacity: number = 0.8): string {\n    switch (timeRange.kind) {\n      case TIME_RANGE_KIND.blue:\n      case TIME_RANGE_KIND.sleep:\n        return `rgba(60, 160, 200, ${opacity})`;\n      case TIME_RANGE_KIND.red:\n        return `rgba(255, 75, 140, ${opacity})`;\n      case TIME_RANGE_KIND.green:\n      case TIME_RANGE_KIND.work:\n        return `rgba(0, 200, 0, ${opacity})`;\n      case TIME_RANGE_KIND.yellow:\n        if (opacity === 1) {\n          return `rgba(240, 180, 30, 1)`;\n        }\n        return `rgba(255, 230, 50, ${opacity})`;\n      case TIME_RANGE_KIND.title:\n        if (opacity === 1) {\n          return `rgba(0, 0, 0, 1)`;\n        }\n        if (timeRange.background === 'green') {\n          return `rgba(230, 250, 230, ${opacity})`;\n        }\n        if (timeRange.background === 'transparent') {\n          return `rgba(255, 255, 255, ${opacity})`;\n        }\n        return `rgba(230, 230, 230, ${opacity})`;\n      case TIME_RANGE_KIND.background:\n        if (opacity === 1) {\n          return `rgba(0, 0, 0, 1)`;\n        }\n        return `rgba(230, 230, 230, ${opacity})`;\n      default:\n        return `rgba(230, 230, 230, ${opacity})`;\n    }\n  }\n\n  /**\n   * Get Title position\n   * @param {TimeRangeModel} timeRange\n   * @return {number}\n   */\n  public rangeTitleX(timeRange: TimeRangeModel): number {\n    return this.rangeX(timeRange) + Math.round(this.rangeWidth(timeRange) / 2) + 4;\n  }\n\n  /**\n   * Get title position\n   * @param {TimeRangeModel} timeRange\n   * @return {number}\n   */\n  public rangeTitleY(timeRange: TimeRangeModel): number {\n    return timeRange.height === 2 ? 75 : 290;\n  }\n\n}\n","/**\n * Kinds for TimeRange\n */\nexport const TIME_RANGE_KIND = {\n  red: 'red',\n  yellow: 'yellow',\n  green: 'green',\n  blue: 'blue',\n\n  title: 'title',\n  background: 'background',\n\n  work: 'work',\n  sleep: 'sleep'\n};\n\n/**\n * Interface for TimeRange\n */\nexport interface ITimeRangeModel {\n  start: string;\n  end: string;\n\n  kind: string;\n\n  title: string;\n\n  height: number;\n  background?: string;\n}\n\n/**\n * Default value\n */\nconst DEFAULT_TIME_RANGE: ITimeRangeModel = {\n  start: '00:00',\n  end: '24:00',\n  kind: TIME_RANGE_KIND.blue,\n  title: 'New Range',\n  height: 0\n};\n\n/**\n * Main Model\n */\nexport class TimeRangeModel implements ITimeRangeModel {\n\n  public start: string;\n  public end: string;\n\n  public kind: string;\n\n  public title: string;\n\n  public height: number;\n  public background?: string;\n\n  private _hourStart: number;\n  private _minutesStart: number;\n  private _hourEnd: number;\n  private _minutesEnd: number;\n\n  constructor(data: ITimeRangeModel = DEFAULT_TIME_RANGE) {\n    this.kind = data.kind;\n\n    this.setStart(data.start);\n    this.setEnd(data.end);\n\n    this.title = data.title;\n\n    this.height = +data.height;\n    this.background = data.background;\n  }\n\n  public setStart(start: string = '0:0') {\n    this.start = start;\n    const startTime = start.split(':');\n    this._hourStart = +startTime[0];\n    this._minutesStart = +startTime[1];\n  }\n\n  public setEnd(end: string = '24:00') {\n    this.end = end;\n    const endTime = end.split(':');\n    this._hourEnd = +endTime[0];\n    this._minutesEnd = +endTime[1];\n  }\n\n  get hourStart() {\n    return this._hourStart;\n  }\n\n  get minutesStart() {\n    return this._minutesStart;\n  }\n\n  get hourEnd() {\n    return this._hourEnd;\n  }\n\n  get minutesEnd() {\n    return this._minutesEnd;\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {TIME_RANGE_KIND, TimeRangeModel} from './time-range.model';\nimport {Http} from '@angular/http';\nimport {FormGroup} from '@angular/forms';\n\n/**\n * Service for TimeRanges\n */\n\n@Injectable()\nexport class TimeRangeService {\n\n  constructor(private http: Http) { }\n\n  /**\n   * Get init data from JSON\n   * @return {Promise<TimeRangeModel[]>}\n   */\n  public getInitRegularSchedule(): Promise<TimeRangeModel[]> {\n    return this.http.get('./assets/regular-schedule.json')\n      .toPromise()\n      .then((res) => {\n        const result: TimeRangeModel[] = res.json().map((obj) => new TimeRangeModel(obj));\n        return result;\n      });\n  }\n\n  /**\n   * Get init data from JSON (Optomization)\n   * @return {Promise<TimeRangeModel[]>}\n   */\n  public getInitOptimizedSchedule(): Promise<TimeRangeModel[]> {\n    return this.http.get('./assets/optimized-schedule.json')\n      .toPromise()\n      .then((res) => {\n        const result: TimeRangeModel[] = res.json().map((obj) => new TimeRangeModel(obj));\n        return result;\n      });\n  }\n\n  /**\n   * Create New Schedule\n   * @param formData\n   * @return {TimeRangeModel[]}\n   */\n  public createSchedule(formData: any): TimeRangeModel[] {\n    const result: TimeRangeModel[] = [];\n\n    // Sleep\n    this._addRange(result, new TimeRangeModel({\n      start: `${formData.sleep.start.hour}:${formData.sleep.start.minutes}`,\n      end: `${formData.sleep.end.hour}:${formData.sleep.end.minutes}`,\n      kind: TIME_RANGE_KIND.sleep,\n      title: 'Sleep',\n      height: 0\n    }));\n    // Wake up\n    this._addRange(result, new TimeRangeModel({\n      start: `${formData.sleep.end.hour}:${formData.sleep.end.minutes}`,\n      end: `${formData.sleep.end.hour}:${formData.sleep.end.minutes}`,\n      kind: TIME_RANGE_KIND.sleep,\n      title: 'Wake up',\n      height: 2\n    }));\n    // Fall asleep\n    this._addRange(result, new TimeRangeModel({\n      start: `${formData.sleep.start.hour}:${formData.sleep.start.minutes}`,\n      end: `${formData.sleep.start.hour}:${formData.sleep.start.minutes}`,\n      kind: TIME_RANGE_KIND.sleep,\n      title: 'Fall asleep',\n      height: 2\n    }));\n\n    // Heavy traffic on the way to work\n    this._addRange(result, new TimeRangeModel({\n      start: `${formData.trafficToWork.start.hour}:${formData.trafficToWork.start.minutes}`,\n      end: `${formData.trafficToWork.end.hour}:${formData.trafficToWork.end.minutes}`,\n      kind: TIME_RANGE_KIND.background,\n      title: 'Heavy traffic on the way to work',\n      height: 0\n    }));\n    // Heavy traffic on the way to home\n    this._addRange(result, new TimeRangeModel({\n      start: `${formData.trafficToHome.start.hour}:${formData.trafficToHome.start.minutes}`,\n      end: `${formData.trafficToHome.end.hour}:${formData.trafficToHome.end.minutes}`,\n      kind: TIME_RANGE_KIND.background,\n      title: 'Heavy traffic on the way to home',\n      height: 0\n    }));\n\n    // Way to work\n    this._addRange(result, new TimeRangeModel({\n      start: `${formData.wayToWork.start.hour}:${formData.wayToWork.start.minutes}`,\n      end: `${formData.wayToWork.end.hour}:${formData.wayToWork.end.minutes}`,\n      kind: TIME_RANGE_KIND.red,\n      title: '', // Transport\n      height: 0\n    }));\n    this._addRange(result, new TimeRangeModel({\n      start: `${formData.wayToWork.start.hour}:${formData.wayToWork.start.minutes}`,\n      end: `${formData.wayToWork.end.hour}:${formData.wayToWork.end.minutes}`,\n      kind: TIME_RANGE_KIND.title,\n      background: 'transparent',\n      title: 'Transport',\n      height: 0\n    }));\n\n    // Way to home\n    this._addRange(result, new TimeRangeModel({\n      start: `${formData.wayToHome.start.hour}:${formData.wayToHome.start.minutes}`,\n      end: `${formData.wayToHome.end.hour}:${formData.wayToHome.end.minutes}`,\n      kind: TIME_RANGE_KIND.red,\n      title: '', // Transport\n      height: 0\n    }));\n    this._addRange(result, new TimeRangeModel({\n      start: `${formData.wayToHome.start.hour}:${formData.wayToHome.start.minutes}`,\n      end: `${formData.wayToHome.end.hour}:${formData.wayToHome.end.minutes}`,\n      kind: TIME_RANGE_KIND.title,\n      background: 'transparent',\n      title: 'Transport',\n      height: 0\n    }));\n\n    // Work Starts\n    this._addRange(result, new TimeRangeModel({\n      start: `${formData.work.start.hour}:${formData.work.start.minutes}`,\n      end: `${formData.work.start.hour}:${formData.work.start.minutes}`,\n      kind: TIME_RANGE_KIND.red,\n      title: 'Work Starts',\n      height: 2\n    }));\n    // Work Ends\n    this._addRange(result, new TimeRangeModel({\n      start: `${formData.work.end.hour}:${formData.work.end.minutes}`,\n      end: `${formData.work.end.hour}:${formData.work.end.minutes}`,\n      kind: TIME_RANGE_KIND.red,\n      title: 'Work Ends',\n      height: 2\n    }));\n    this._addRange(result, new TimeRangeModel({\n      start: `${formData.work.start.hour}:${formData.work.start.minutes}`,\n      end: `${formData.work.end.hour}:${formData.work.end.minutes}`,\n      kind: TIME_RANGE_KIND.title,\n      background: 'green',\n      title: 'Activity at work',\n      height: 0\n    }));\n    this._addRange(result, new TimeRangeModel({\n      start: `${formData.wayToHome.end.hour}:${formData.wayToHome.end.minutes}`,\n      end: `${formData.sleep.start.hour}:${formData.sleep.start.minutes}`,\n      kind: TIME_RANGE_KIND.title,\n      background: 'green',\n      title: 'Activity at home',\n      height: 0\n    }));\n    // Work Flow\n    // this._addRange(result, new TimeRangeModel({\n    //   start: `${formData.work.start.hour}:${formData.work.start.minutes}`,\n    //   end: `${formData.work.end.hour}:${formData.work.end.minutes}`,\n    //   kind: TIME_RANGE_KIND.work,\n    //   title: 'Work Flow',\n    //   height: 0\n    // }));\n\n    return result;\n  }\n\n  /**\n   * Delete range from the list\n   * @param {TimeRangeModel[]} ranges\n   * @param {TimeRangeModel} timeRange\n   */\n  public deleteRange(ranges: TimeRangeModel[], timeRange: TimeRangeModel) {\n    const index = ranges.findIndex((range) => range === timeRange);\n    ranges.splice(index, 1);\n  }\n\n  /**\n   * Edit range properties\n   * @param {TimeRangeModel} timeRange\n   * @param {FormGroup} form\n   */\n  public editTimeRange(timeRange: TimeRangeModel, form: FormGroup) {\n    timeRange.title = form.controls['title'].value;\n    timeRange.setStart(`${form.controls['startHour'].value}:${form.controls['startMinutes'].value}`);\n    timeRange.setEnd(`${form.controls['endHour'].value}:${form.controls['endMinutes'].value}`);\n    timeRange.kind = form.controls['kind'].value;\n    timeRange.height = form.controls['height'].value;\n  }\n\n  /**\n   * Add range to the list\n   * @param {TimeRangeModel[]} ranges\n   * @param {TimeRangeModel} timeRange\n   */\n  public addRange(ranges: TimeRangeModel[], timeRange: TimeRangeModel) {\n    ranges.push(timeRange);\n  }\n\n  /**\n   * Get copy of the list\n   * @param {TimeRangeModel[]} ranges\n   * @return {TimeRangeModel[]}\n   */\n  public copyRange(ranges: TimeRangeModel[]): TimeRangeModel[] {\n    return [].concat(ranges);\n  }\n\n  /**\n   * Filtering list by range kind\n   * @param {TimeRangeModel[]} ranges\n   * @return {TimeRangeModel[]}\n   */\n  public generalRangesFiler(ranges: TimeRangeModel[]): TimeRangeModel[] {\n    return ranges.filter((timeRange) => [\n      TIME_RANGE_KIND.work,\n      TIME_RANGE_KIND.sleep,\n      TIME_RANGE_KIND.red,\n      TIME_RANGE_KIND.green,\n      TIME_RANGE_KIND.yellow,\n      TIME_RANGE_KIND.blue,\n    ].indexOf(timeRange.kind) !== -1);\n  }\n\n  /**\n   * Filtering list by title range kind\n   * @param {TimeRangeModel[]} ranges\n   * @return {TimeRangeModel[]}\n   */\n  public titleRangesFiler(ranges: TimeRangeModel[]): TimeRangeModel[] {\n    return ranges.filter((timeRange) => TIME_RANGE_KIND.title === timeRange.kind);\n  }\n\n  /**\n   * Filtering list by background range kind\n   * @param {TimeRangeModel[]} ranges\n   * @return {TimeRangeModel[]}\n   */\n  public backgroundRangesFiler(ranges: TimeRangeModel[]): TimeRangeModel[] {\n    return ranges.filter((timeRange) => TIME_RANGE_KIND.background === timeRange.kind);\n  }\n\n  /*\n  Files\n   */\n\n  /**\n   * Ganarate and download JSON from the list\n   * @param {TimeRangeModel[]} timeRanges\n   * @param {string} title\n   */\n  downloadData(timeRanges: TimeRangeModel[], title: string) {\n    const link = document.createElement('a');\n    link.download = `${title}.json`;\n    link.href = 'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(timeRanges));\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  /**\n   * Uploading and parse JSON file\n   * @param {File} file\n   * @return {Promise<any>}\n   */\n  uploadFile(file: File): Promise<any> {\n    return new Promise((resolve, reject) => {\n      const fr = new FileReader();\n      fr.onload = (e: any) => {\n        try {\n          const result = JSON.parse(e.target.result);\n          if (!result || !result.length) {\n            return [];\n          }\n\n          resolve(result.map((obj) => new TimeRangeModel(obj)));\n\n        } catch (e) {\n          console.log('Error: Parsing JSON');\n          reject(e);\n        }\n\n      };\n      fr.readAsText(file);\n    });\n  }\n\n  /**\n   * Get duration of TimeRange\n   * @param {TimeRangeModel} range\n   * @return {string}\n   */\n  public durationRange(range: TimeRangeModel): string {\n    return this.duration(range.hourStart, range.minutesStart, range.hourEnd, range.minutesEnd);\n  }\n\n  /**\n   * Get duration between times\n   * @param {number} startH\n   * @param {number} startM\n   * @param {number} endH\n   * @param {number} endM\n   * @return {string}\n   */\n  public duration(startH: number, startM: number, endH: number, endM: number): string {\n    const _startM = startH * 60 + startM;\n    const _endM = endH * 60 + endM;\n    let _resM = _endM - _startM;\n    if (_resM <= 0) {\n      _resM += 24 * 60;\n    }\n    const resH = Math.floor(_resM / 60);\n    const resM = _resM % 60;\n    if (resH === 24) {\n      return '';\n    }\n    if (resH === 0) {\n      return `${resM}m`;\n    }\n    if (resM === 0) {\n      return `${resH}h`;\n    }\n    return `${resH}h ${resM}m`;\n  }\n\n  public hours(length = 24): number[] {\n    return Array.from(Array(length).keys());\n  }\n\n  /*\n  Private\n   */\n\n  /**\n   * Add range to the list\n   * @param {TimeRangeModel[]} ranges\n   * @param {TimeRangeModel} timeRange\n   * @private\n   */\n  private _addRange(ranges: TimeRangeModel[], timeRange: TimeRangeModel) {\n    if (timeRange.hourEnd < timeRange.hourStart) {\n      const timeRangeBefore24 = new TimeRangeModel(timeRange);\n      timeRangeBefore24.setEnd('24:00');\n      ranges.push(timeRangeBefore24);\n\n      const timeRangeAfter24 = new TimeRangeModel(timeRange);\n      timeRangeAfter24.setStart('00:00');\n      ranges.push(timeRangeAfter24);\n    } else {\n      ranges.push(timeRange);\n    }\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}